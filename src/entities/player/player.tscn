[gd_scene load_steps=64 format=3 uid="uid://bmdhyy8ctkak5"]

[ext_resource type="Script" path="res://src/entities/player/player.gd" id="1_0xhw1"]
[ext_resource type="Script" path="res://src/entities/player/model.gd" id="2_38xp3"]
[ext_resource type="Script" path="res://src/entities/player/camera.gd" id="2_i0m73"]
[ext_resource type="Script" path="res://src/util/state_machine/state_machine.gd" id="3_hpwn6"]
[ext_resource type="PackedScene" uid="uid://la4aa3giu5o7" path="res://src/entities/player/state/grounded/crouch_state/crouch_state.tscn" id="5_bjtch"]
[ext_resource type="PackedScene" uid="uid://blu43kyi6mt77" path="res://src/entities/player/state/air_state/air_state.tscn" id="5_iounl"]
[ext_resource type="PackedScene" uid="uid://b64a6pjsly4hx" path="res://src/entities/player/state/grounded/move_state/move_state.tscn" id="7_1fis3"]
[ext_resource type="PackedScene" uid="uid://btxhhnoi1x2eo" path="res://src/entities/player/state/grounded/sprint_state/sprint_state.tscn" id="8_76gqj"]
[ext_resource type="PackedScene" uid="uid://c20l08dunciml" path="res://src/entities/player/state/grounded/slide_state/slide_state.tscn" id="9_w7ewa"]
[ext_resource type="Shader" path="res://src/entities/player/vignette.gdshader" id="11_3ayyp"]

[sub_resource type="Curve" id="Curve_mc6fq"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(1, 0.954545), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="GDScript" id="GDScript_geilo"]
script/source = "extends Node


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass
"

[sub_resource type="QuadMesh" id="QuadMesh_6h71i"]
size = Vector2(0.125, 0.125)

[sub_resource type="GDScript" id="GDScript_lnjvn"]
script/source = "extends Node3D

@onready var camera_offset: Node3D = $CameraOffset

var camera_rot: Vector3 = Vector3.ZERO


func _input(event: InputEvent) -> void:
	if not is_multiplayer_authority():
		return
	
	if event is InputEventMouseMotion:
		if Input.get_mouse_mode() == Input.MOUSE_MODE_CAPTURED:
			camera_rot.y -= deg2rad(event.relative.x) * 0.1
			camera_rot.x -= deg2rad(event.relative.y) * 0.1
			camera_rot.x = clamp(camera_rot.x, deg2rad(-89), deg2rad(89))
			rotation = (Quaternion(Vector3.UP, camera_rot.y) * Quaternion(Vector3.RIGHT, camera_rot.x)).get_euler()
"

[sub_resource type="CameraEffects" id="CameraEffects_ovyji"]
dof_blur_far_distance = 64.0
dof_blur_far_transition = 32.0
dof_blur_near_enabled = true

[sub_resource type="GDScript" id="GDScript_e1qd1"]
script/source = "extends Node3D

var tilt_amount = 0.125
var wall_tilt = 0.25


func _process(delta: float) -> void:
	return
	if not is_multiplayer_authority():
		return
	
	var velocity = owner.get_local_velocity()
	var rot_offset = Vector3(
		deg2rad(velocity.z) - deg2rad(velocity.y * 1.5),
		0,
		-deg2rad(velocity.x)
	) * tilt_amount
	
	if owner.is_on_wall() and not owner.is_on_floor():
		rot_offset += -global_transform.basis.x * owner.get_wall_normal() * (velocity.length() / 10) * wall_tilt
	rotation = rotation.lerp(rot_offset, 16 * delta)
"

[sub_resource type="GDScript" id="GDScript_3e5vr"]
script/source = "extends Node3D

@export var bob_amount: float = 0.025

var step_time: float = 0.0


func _process(delta: float) -> void:
	return
	if not is_multiplayer_authority():
		return
	
	var velocity = owner.velocity
	if owner.state_machine.has_state(\"ground\") or owner.state_machine.has_state(\"sprint\") or owner.state_machine.has_state(\"crouch\"):
		position = position.lerp(Vector3(cos(step_time), abs(sin(step_time)), 0) * Vector3(bob_amount, bob_amount, 0) * (velocity.length() / 4), 10 * delta)
		rotation = rotation.lerp(Vector3(-abs(cos(step_time)), 0, -sin(step_time)) * Vector3(bob_amount, 0, bob_amount) * 0.125 * (velocity.length() / 4), 10 * delta)
	else:
		position = position.lerp(Vector3.ZERO, 10 * delta)
		rotation = rotation.lerp(Vector3.ZERO, 10 * delta)


func _physics_process(delta: float) -> void:
	if not is_multiplayer_authority():
		return
	
	step_time += owner.velocity.length() * 1.5 * delta
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_rum1d"]
radius = 0.25
height = 1.5

[sub_resource type="SphereMesh" id="SphereMesh_jokj3"]
radius = 0.25
height = 0.5

[sub_resource type="SphereMesh" id="SphereMesh_ckpif"]
radius = 0.05
height = 0.1

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_aydpw"]
albedo_color = Color(0, 0, 0, 1)
roughness = 0.25

[sub_resource type="CapsuleMesh" id="CapsuleMesh_5e8a4"]
radius = 0.25
height = 1.0

[sub_resource type="GDScript" id="GDScript_d4cie"]
script/source = "extends Node3D


func _process(delta: float) -> void:
	if not is_multiplayer_authority():
		return
	
	var velocity = Vector3(deg2rad(owner.get_local_velocity().x), deg2rad(owner.get_local_velocity().y), deg2rad(owner.get_local_velocity().z))
	$ShaftOffset.rotation = $ShaftOffset.rotation.lerp(Vector3(velocity.z - velocity.y, velocity.x, velocity.x / 4) * 6, 5 * delta)
	$ShaftOffset.rotation.x = clamp($ShaftOffset.rotation.x, deg2rad(-20), deg2rad(127))
	$ShaftOffset.rotation.y = clamp($ShaftOffset.rotation.y, deg2rad(-45), deg2rad(45))
"

[sub_resource type="SphereMesh" id="SphereMesh_ytgni"]
radius = 0.042
height = 0.069

[sub_resource type="CapsuleMesh" id="CapsuleMesh_42f4d"]
radius = 0.038
height = 0.212

[sub_resource type="SceneReplicationConfig" id="SceneReplicationConfig_ppjm4"]
properties/0/path = NodePath(".:position")
properties/0/spawn = true
properties/0/sync = true
properties/1/path = NodePath("Model/HeadPivot:position")
properties/1/spawn = true
properties/1/sync = true
properties/2/path = NodePath("Model/HeadPivot:rotation")
properties/2/spawn = true
properties/2/sync = true
properties/3/path = NodePath("Model/TorsoPivot:position")
properties/3/spawn = true
properties/3/sync = true
properties/4/path = NodePath("Model/TorsoPivot:rotation")
properties/4/spawn = true
properties/4/sync = true
properties/5/path = NodePath("Model/TorsoPivot:scale")
properties/5/spawn = true
properties/5/sync = true
properties/6/path = NodePath("Model/HeadPivot/HeadOffset:rotation")
properties/6/spawn = true
properties/6/sync = true
properties/7/path = NodePath("Model/HeadPivot/HeadOffset:position")
properties/7/spawn = true
properties/7/sync = true
properties/8/path = NodePath("AnimationTree:parameters/TimeScale/scale")
properties/8/spawn = true
properties/8/sync = true
properties/9/path = NodePath("AnimationTree:parameters/crouch 2/blend_amount")
properties/9/spawn = true
properties/9/sync = true
properties/10/path = NodePath("AnimationTree:parameters/crouch/add_amount")
properties/10/spawn = true
properties/10/sync = true
properties/11/path = NodePath("AnimationTree:parameters/crouch 3/blend_position")
properties/11/spawn = true
properties/11/sync = true
properties/12/path = NodePath("Model:rotation")
properties/12/spawn = true
properties/12/sync = true

[sub_resource type="Curve" id="Curve_nh717"]
_data = [Vector2(0, 0), 0.0, 1.4, 0, 0, Vector2(1, 1), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="Animation" id="Animation_d00a2"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Model/TorsoPivot:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 1, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/path = NodePath("CameraPivot:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 1.25, 0)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Model/TorsoPivot:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(1, 1, 1)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = false
tracks/3/path = NodePath("Model/HeadPivot:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 1, 0)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("CollisionShape3D:shape:height")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [1.5]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("CollisionShape3D:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0.75, 0)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = false
tracks/6/path = NodePath("Model/HeadPivot:rotation")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("CameraPivot/CameraOffset/Camera3D:rotation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("Model/TorsoPivot:rotation")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = false
tracks/9/path = NodePath("CameraPivot:rotation")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("CameraPivot/CameraOffset:position")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("CameraPivot/CameraOffset:rotation")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("Model/HeadPivot/HeadOffset:position")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("Model/HeadPivot/HeadOffset:rotation")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}

[sub_resource type="Animation" id="Animation_wcam0"]
resource_name = "crouch"
length = 0.25
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Model/TorsoPivot:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.25),
"transitions": PackedFloat32Array(0.25, 1),
"update": 0,
"values": [Vector3(0, 1, 0), Vector3(0, 0.625, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/path = NodePath("CameraPivot:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.25),
"transitions": PackedFloat32Array(0.25, 1),
"update": 0,
"values": [Vector3(0, 1.25, 0), Vector3(0, 0.875, 0)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/path = NodePath("Model/HeadPivot:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.25),
"transitions": PackedFloat32Array(0.25, 1),
"update": 0,
"values": [Vector3(0, 1, 0), Vector3(0, 0.625, 0)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Model/TorsoPivot:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.25),
"transitions": PackedFloat32Array(0.25, 1),
"update": 0,
"values": [Vector3(1, 1, 1), Vector3(1, 0.625, 1)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("CollisionShape3D:shape:height")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.25),
"transitions": PackedFloat32Array(0.25, 1),
"update": 0,
"values": [1.5, 0.75]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("CollisionShape3D:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 0.25),
"transitions": PackedFloat32Array(0.25, 1),
"update": 0,
"values": [Vector3(0, 0.75, 0), Vector3(0, 0.375, 0)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("CameraPivot/CameraOffset:position")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 0.25),
"transitions": PackedFloat32Array(0.25, 1),
"update": 0,
"values": [Vector3(0, 0, 0), Vector3(0, -0.375, 0)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("Model/HeadPivot/HeadOffset:position")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0, 0.25),
"transitions": PackedFloat32Array(0.25, 1),
"update": 0,
"values": [Vector3(0, 0, 0), Vector3(0, -0.375, 0)]
}

[sub_resource type="Animation" id="Animation_x0yy1"]
resource_name = "head_bob"

[sub_resource type="Animation" id="Animation_x6syn"]
resource_name = "head_tilt_backward"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = false
tracks/0/path = NodePath("CameraPivot:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0.261799, 0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/path = NodePath("Model/HeadPivot:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0.785398, 0, 0)]
}

[sub_resource type="Animation" id="Animation_v841j"]
resource_name = "head_tilt_forward"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = false
tracks/0/path = NodePath("CameraPivot:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(-0.261799, 0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/path = NodePath("Model/HeadPivot:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(-0.785398, 0, 0)]
}

[sub_resource type="Animation" id="Animation_rjvmd"]
resource_name = "head_tilt_left"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = false
tracks/0/path = NodePath("CameraPivot:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0.261799)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/path = NodePath("Model/HeadPivot:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0.785398)]
}

[sub_resource type="Animation" id="Animation_qwulc"]
resource_name = "head_tilt_right"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = false
tracks/0/path = NodePath("CameraPivot:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, -0.261799)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/path = NodePath("Model/HeadPivot:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, -0.785398)]
}

[sub_resource type="Animation" id="Animation_fjiyj"]
resource_name = "idle"
length = 4.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Model/TorsoPivot:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 2, 4),
"transitions": PackedFloat32Array(-2, -2, -2),
"update": 0,
"values": [Vector3(1, 1, 1), Vector3(1, 0.98, 1), Vector3(1, 1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Model/TorsoPivot:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 2, 4),
"transitions": PackedFloat32Array(-2, -2, -2),
"update": 0,
"values": [Vector3(0, 1, 0), Vector3(0, 0.98, 0), Vector3(0, 1, 0)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/path = NodePath("Model/HeadPivot:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 2, 4),
"transitions": PackedFloat32Array(-2, -2, -2),
"update": 0,
"values": [Vector3(0, 1, 0), Vector3(0, 0.98, 0), Vector3(0, 1, 0)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = false
tracks/3/path = NodePath("Model/HeadPivot:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(1, 3),
"transitions": PackedFloat32Array(-2, -2),
"update": 0,
"values": [Vector3(0.0349066, 0, 0), Vector3(-0.0349066, 0, 0)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = false
tracks/4/path = NodePath("CameraPivot:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 2, 4),
"transitions": PackedFloat32Array(-2, -2, -2),
"update": 0,
"values": [Vector3(0, 1.25, 0), Vector3(0, 1.245, 0), Vector3(0, 1.25, 0)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("CameraPivot/CameraOffset/Camera3D:rotation")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(1, 3),
"transitions": PackedFloat32Array(-2, -2),
"update": 0,
"values": [Vector3(0.00174533, 0, 0), Vector3(-0.00174533, 0, 0)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Model/TorsoPivot:rotation")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 2, 4),
"transitions": PackedFloat32Array(-2, -2, -2),
"update": 0,
"values": [Vector3(-0.0872665, 0, 0.00174533), Vector3(-0.122173, 0, 0.00174533), Vector3(-0.0872665, 0, 0.00174533)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("Model/HeadPivot/HeadOffset:position")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0, 2, 4),
"transitions": PackedFloat32Array(-2, -2, -2),
"update": 0,
"values": [Vector3(0, 0, 0), Vector3(0, -0.02, 0), Vector3(0, 0, 0)]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("Model/HeadPivot/HeadOffset:rotation")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(1, 3),
"transitions": PackedFloat32Array(-2, -2),
"update": 0,
"values": [Vector3(0.0349066, 0, 0), Vector3(-0.0349066, 0, 0)]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("CameraPivot/CameraOffset:position")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0, 2, 4),
"transitions": PackedFloat32Array(-2, -2, -2),
"update": 0,
"values": [Vector3(0, 0, 0), Vector3(0, -0.005, 0), Vector3(0, 0, 0)]
}

[sub_resource type="Animation" id="Animation_aeutt"]
resource_name = "move_backward"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Model/TorsoPivot:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(1.48353, 0, 0)]
}

[sub_resource type="Animation" id="Animation_d2in6"]
resource_name = "move_forward"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Model/TorsoPivot:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(-1.65806, 0, 0)]
}

[sub_resource type="Animation" id="Animation_y7pfk"]
resource_name = "move_left"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Model/TorsoPivot:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(-0.0872665, 0, 1.5708)]
}

[sub_resource type="Animation" id="Animation_3d70p"]
resource_name = "move_right"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Model/TorsoPivot:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(-0.0872665, 0, -1.5708)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_xwrl4"]
_data = {
"RESET": SubResource( "Animation_d00a2" ),
"crouch": SubResource( "Animation_wcam0" ),
"head_bob": SubResource( "Animation_x0yy1" ),
"head_tilt_backward": SubResource( "Animation_x6syn" ),
"head_tilt_forward": SubResource( "Animation_v841j" ),
"head_tilt_left": SubResource( "Animation_rjvmd" ),
"head_tilt_right": SubResource( "Animation_qwulc" ),
"idle": SubResource( "Animation_fjiyj" ),
"move_backward": SubResource( "Animation_aeutt" ),
"move_forward": SubResource( "Animation_d2in6" ),
"move_left": SubResource( "Animation_y7pfk" ),
"move_right": SubResource( "Animation_3d70p" )
}

[sub_resource type="AnimationNodeAdd2" id="AnimationNodeAdd2_n3q56"]

[sub_resource type="AnimationNodeAdd2" id="AnimationNodeAdd2_8n515"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_y8ain"]
animation = &"head_bob"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_whhwk"]
animation = &"head_tilt_left"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_xi3ue"]
animation = &"head_tilt_right"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_svrhr"]
animation = &"head_tilt_forward"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_f66vj"]
animation = &"head_tilt_backward"

[sub_resource type="AnimationNodeBlendSpace2D" id="AnimationNodeBlendSpace2D_aptr7"]
blend_point_0/node = SubResource( "AnimationNodeAnimation_whhwk" )
blend_point_0/pos = Vector2(-1, 0)
blend_point_1/node = SubResource( "AnimationNodeAnimation_xi3ue" )
blend_point_1/pos = Vector2(1, 0)
blend_point_2/node = SubResource( "AnimationNodeAnimation_svrhr" )
blend_point_2/pos = Vector2(0, 1)
blend_point_3/node = SubResource( "AnimationNodeAnimation_f66vj" )
blend_point_3/pos = Vector2(0, -1)

[sub_resource type="AnimationNodeTimeScale" id="AnimationNodeTimeScale_xuqen"]

[sub_resource type="AnimationNodeTimeScale" id="AnimationNodeTimeScale_od65t"]

[sub_resource type="AnimationNodeBlend2" id="AnimationNodeBlend2_onxls"]
sync = true

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_ijj8l"]
animation = &"move_left"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_uiqjg"]
animation = &"move_right"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_x1ouk"]
animation = &"move_forward"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_mcwgv"]
animation = &"move_backward"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_84vt6"]
animation = &"idle"

[sub_resource type="AnimationNodeBlendSpace2D" id="AnimationNodeBlendSpace2D_7owew"]
auto_triangles = false
blend_point_0/node = SubResource( "AnimationNodeAnimation_ijj8l" )
blend_point_0/pos = Vector2(-1, 0)
blend_point_1/node = SubResource( "AnimationNodeAnimation_uiqjg" )
blend_point_1/pos = Vector2(1, 0)
blend_point_2/node = SubResource( "AnimationNodeAnimation_x1ouk" )
blend_point_2/pos = Vector2(0, 1)
blend_point_3/node = SubResource( "AnimationNodeAnimation_mcwgv" )
blend_point_3/pos = Vector2(0, -1)
blend_point_4/node = SubResource( "AnimationNodeAnimation_84vt6" )
blend_point_4/pos = Vector2(0, 0)
triangles = PackedInt32Array(0, 2, 3, 1, 2, 3)

[sub_resource type="AnimationNodeAdd2" id="AnimationNodeAdd2_i6e72"]
sync = true

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_k8mr5"]
animation = &"idle"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_pp37i"]
animation = &"crouch"

[sub_resource type="AnimationNodeBlendTree" id="AnimationNodeBlendTree_4e6nb"]
graph_offset = Vector2(-829.223, -84.2347)
nodes/Add2/node = SubResource( "AnimationNodeAdd2_8n515" )
nodes/Add2/position = Vector2(220, -60)
"nodes/Add2 2/node" = SubResource( "AnimationNodeAdd2_n3q56" )
"nodes/Add2 2/position" = Vector2(-500, 140)
nodes/Animation/node = SubResource( "AnimationNodeAnimation_y8ain" )
nodes/Animation/position = Vector2(-880, 360)
nodes/BlendSpace2D/node = SubResource( "AnimationNodeBlendSpace2D_aptr7" )
nodes/BlendSpace2D/position = Vector2(-800, 100)
nodes/TimeScale/node = SubResource( "AnimationNodeTimeScale_od65t" )
nodes/TimeScale/position = Vector2(-380, -40)
"nodes/TimeScale 2/node" = SubResource( "AnimationNodeTimeScale_xuqen" )
"nodes/TimeScale 2/position" = Vector2(-700, 320)
nodes/crouch/node = SubResource( "AnimationNodeAdd2_i6e72" )
nodes/crouch/position = Vector2(-20, 40)
"nodes/crouch 2/node" = SubResource( "AnimationNodeBlend2_onxls" )
"nodes/crouch 2/position" = Vector2(-220, 20)
"nodes/crouch 3/node" = SubResource( "AnimationNodeBlendSpace2D_7owew" )
"nodes/crouch 3/position" = Vector2(-100, -160)
nodes/in/node = SubResource( "AnimationNodeAnimation_k8mr5" )
nodes/in/position = Vector2(-620, -40)
nodes/null/node = SubResource( "AnimationNodeAnimation_pp37i" )
nodes/null/position = Vector2(-180, 220)
nodes/output/position = Vector2(440, 20)
node_connections = [&"output", 0, &"Add2", &"Add2", 0, &"crouch 3", &"Add2", 1, &"crouch", &"Add2 2", 0, &"BlendSpace2D", &"Add2 2", 1, &"TimeScale 2", &"TimeScale", 0, &"in", &"TimeScale 2", 0, &"Animation", &"crouch", 0, &"crouch 2", &"crouch", 1, &"null", &"crouch 2", 0, &"TimeScale", &"crouch 2", 1, &"Add2 2"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_te7br"]
shader = ExtResource( "11_3ayyp" )

[sub_resource type="GDScript" id="GDScript_i0txd"]
script/source = "extends RichTextLabel


func _process(delta: float) -> void:
	text = \"Parkour Game v0.1\\n\"
	text += \"FPS: \" + str(Engine.get_frames_per_second()) + \"\\n\"
	text += \"Position: \" + str(vector_snapped(owner.position, 0.01)) + \"\\n\"
	text += \"Velocity: \" + str(vector_snapped(owner.velocity, 0.01)) + \"\\n\"
	text += \"UPS: \" + str(snapped((owner.velocity * Vector3(1, 0, 1)).length(), 0.01)) + \"\\n\"
	text += \"States: \" + str(owner.state_machine.active_states) + \"\\n\"


func vector_snapped(vec: Vector3, amount: float) -> Vector3:
	vec.x = snapped(vec.x, amount)
	vec.y = snapped(vec.y, amount)
	vec.z = snapped(vec.z, amount)
	return vec
"

[node name="Player" type="CharacterBody3D"]
floor_constant_speed = true
script = ExtResource( "1_0xhw1" )
walk_speed = null
jump_velocity = null
gravity = null
camera_pivot_path = NodePath("CameraPivot")
camera_offset_path = NodePath("CameraPivot/CameraOffset")
camera_path = NodePath("CameraPivot/CameraOffset/Camera3D")
head_pivot_path = NodePath("Model/HeadPivot")
breathe_intensity_curve = SubResource( "Curve_mc6fq" )

[node name="PlayerAnimator" type="Node" parent="."]
script = SubResource( "GDScript_geilo" )

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.25, -0.311339)
visible = false
mesh = SubResource( "QuadMesh_6h71i" )
skeleton = NodePath("../CameraPivot/CameraOffset/TiltAnim")

[node name="CameraPivot" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.25, 0)
script = SubResource( "GDScript_lnjvn" )

[node name="CameraOffset" type="Node3D" parent="CameraPivot"]

[node name="Camera3D" type="Camera3D" parent="CameraPivot/CameraOffset"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 3)
effects = SubResource( "CameraEffects_ovyji" )
script = ExtResource( "2_i0m73" )

[node name="TiltAnim" type="Node3D" parent="CameraPivot/CameraOffset"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.25, 0)
script = SubResource( "GDScript_e1qd1" )

[node name="BobAnim" type="Node3D" parent="CameraPivot/CameraOffset/TiltAnim"]
script = SubResource( "GDScript_3e5vr" )

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.75, 0)
shape = SubResource( "CapsuleShape3D_rum1d" )

[node name="Model" type="Node3D" parent="."]
script = ExtResource( "2_38xp3" )

[node name="HeadPivot" type="Node3D" parent="Model"]
transform = Transform3D(1, 0, 0, 0, 0.999999, 0, 0, 0, 0.999999, 0, 1, 0)

[node name="HeadOffset" type="Node3D" parent="Model/HeadPivot"]

[node name="Head" type="MeshInstance3D" parent="Model/HeadPivot/HeadOffset"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.25, -1.86265e-09)
mesh = SubResource( "SphereMesh_jokj3" )
skeleton = NodePath("../../../..")

[node name="LeftEye" type="MeshInstance3D" parent="Model/HeadPivot/HeadOffset/Head"]
transform = Transform3D(1, 0, 0, 0, 0.999805, -0.0197396, 0, 0.0197396, 0.999805, -0.075, 0.000872254, -0.20638)
mesh = SubResource( "SphereMesh_ckpif" )
surface_material_override/0 = SubResource( "StandardMaterial3D_aydpw" )

[node name="RightEye" type="MeshInstance3D" parent="Model/HeadPivot/HeadOffset/Head"]
transform = Transform3D(1, 0, 0, 0, 0.999805, -0.0197396, 0, 0.0197396, 0.999805, 0.075, 0.000872254, -0.20638)
mesh = SubResource( "SphereMesh_ckpif" )
surface_material_override/0 = SubResource( "StandardMaterial3D_aydpw" )

[node name="TorsoPivot" type="Node3D" parent="Model"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)

[node name="Torso" type="MeshInstance3D" parent="Model/TorsoPivot"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.486, 0)
mesh = SubResource( "CapsuleMesh_5e8a4" )
skeleton = NodePath("../../..")

[node name="Penis" type="Node3D" parent="Model/TorsoPivot/Torso"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.125, -0.25)
visible = false
script = SubResource( "GDScript_d4cie" )

[node name="Ball1" type="MeshInstance3D" parent="Model/TorsoPivot/Torso/Penis"]
transform = Transform3D(-0.198193, -0.962263, 0.16654, 0.739664, -0.257838, -0.621534, 0.642546, -2.79906e-08, 0.766845, 0.05, -0.02, 0)
mesh = SubResource( "SphereMesh_ytgni" )
skeleton = NodePath("../../../../..")

[node name="Ball2" type="MeshInstance3D" parent="Model/TorsoPivot/Torso/Penis"]
transform = Transform3D(0.198192, -0.962263, -0.16654, 0.739664, 0.257838, -0.621534, 0.642546, -2.79906e-08, 0.766845, -0.05, -0.02, 0)
mesh = SubResource( "SphereMesh_ytgni" )
skeleton = NodePath("../../../../..")

[node name="ShaftOffset" type="Node3D" parent="Model/TorsoPivot/Torso/Penis"]
transform = Transform3D(1, -6.92402e-07, -5.01503e-05, -7.33897e-07, 1.01635, -0.0282084, 5.01487e-05, 0.0286807, 0.999618, 0, 0, 0)

[node name="Shaft" type="MeshInstance3D" parent="Model/TorsoPivot/Torso/Penis/ShaftOffset"]
transform = Transform3D(0.999999, -0.000584986, -0.00129888, -0.000614947, 0.68099, -0.786384, 0.00129908, 0.746029, 0.657391, 2.92493e-05, -0.0340495, -0.0373014)
mesh = SubResource( "CapsuleMesh_42f4d" )
skeleton = NodePath("../../../../../..")

[node name="MultiplayerSynchronizer" type="MultiplayerSynchronizer" parent="."]
replication_config = SubResource( "SceneReplicationConfig_ppjm4" )

[node name="StateMachine" type="Node" parent="."]
script = ExtResource( "3_hpwn6" )
root_path = NodePath("..")
state_parent_path = NodePath("States")

[node name="States" type="Node" parent="StateMachine"]

[node name="Air" parent="StateMachine/States" instance=ExtResource( "5_iounl" )]

[node name="Crouch" parent="StateMachine/States" instance=ExtResource( "5_bjtch" )]
speed_multiplier = 0.4

[node name="Ground" parent="StateMachine/States" instance=ExtResource( "7_1fis3" )]

[node name="Slide" parent="StateMachine/States" instance=ExtResource( "9_w7ewa" )]
acceleration_curve = SubResource( "Curve_nh717" )

[node name="Sprint" parent="StateMachine/States" instance=ExtResource( "8_76gqj" )]

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "idle"
method_call_mode = 1
libraries = {
"": SubResource( "AnimationLibrary_xwrl4" )
}

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource( "AnimationNodeBlendTree_4e6nb" )
anim_player = NodePath("../AnimationPlayer")
parameters/Add2/add_amount = 1.0
"parameters/Add2 2/add_amount" = 0.0
parameters/BlendSpace2D/blend_position = Vector2(0, 0)
parameters/TimeScale/scale = 1.0
"parameters/TimeScale 2/scale" = 1.0
parameters/crouch/add_amount = 0.0
"parameters/crouch 2/blend_amount" = 0.0
"parameters/crouch 3/blend_position" = Vector2(0, 0)

[node name="CameraEffects" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="BackBufferCopy" type="BackBufferCopy" parent="CameraEffects"]

[node name="Vignette" type="ColorRect" parent="CameraEffects"]
visible = false
material = SubResource( "ShaderMaterial_te7br" )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="DebugUI" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="MarginContainer" type="MarginContainer" parent="DebugUI"]
anchor_right = 1.0
anchor_bottom = 1.0
theme_override_constants/margin_left = 8
theme_override_constants/margin_top = 8
theme_override_constants/margin_right = 8
theme_override_constants/margin_bottom = 8

[node name="RichTextLabel" type="RichTextLabel" parent="DebugUI/MarginContainer"]
offset_left = 8.0
offset_top = 8.0
offset_right = 1272.0
offset_bottom = 712.0
text = "PARKOUR GAME v0.1
"
script = SubResource( "GDScript_i0txd" )

[connection signal="state_added" from="StateMachine" to="." method="_on_state_machine_state_added"]
